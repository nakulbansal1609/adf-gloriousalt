{
	"name": "autoPauseDW",
	"properties": {
		"description": "pause the shield_db",
		"activities": [
			{
				"name": "QueryHistory",
				"description": "This lookup will get all the queries submitted in the last 30 minutes",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "SELECT 'adf_lookup', count(*) counter  FROM sys.dm_pdw_exec_requests\nwhere submit_time > DATEADD(MINUTE,-30,CURRENT_TIMESTAMP)\nAND session_id NOT IN (SELECT session_id FROM sys.dm_pdw_exec_sessions\nWHERE sql_spid=@@spid)\nAND session_id NOT IN (SELECT DISTINCT session_id\nFROM sys.dm_pdw_exec_requests\nWHERE command LIKE '%adf_lookup%')\nAND session_id NOT IN (SELECT DISTINCT session_id\nFROM sys.dm_pdw_exec_requests\nWHERE [status] = 'Running')\nAND session_id NOT IN (SELECT DISTINCT session_id\nFROM sys.dm_pdw_exec_sessions\nWHERE login_name LIKE '%System%' or login_name like '%NT AUTHORITY\\SYSTEM%')\nand command not in ('USE [synlwcaelumdevdwsql]', 'SELECT @@SPID;')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Shield_staging",
						"type": "DatasetReference",
						"parameters": {
							"TABLE_NAME": "testing_dq_checks_stg",
							"zone": "staging",
							"shield_db_name": "staging"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "CheckNoQuerries",
				"description": "Check if the number of queries in the past hour is greater than 0",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SetResourceGroup",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SetParsedSubscription",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SetCounter",
						"dependencyConditions": [
							"Skipped",
							"Succeeded"
						]
					},
					{
						"activity": "SetCounter_copy1",
						"dependencyConditions": [
							"Skipped",
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(greater(int(variables('counter')), 0), False, True)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "WaitFALSE",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "pauseDW",
							"description": "",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat('https://management.azure.com/subscriptions/',variables('subscriptionID'),'/resourceGroups/',variables('ResourceGroup'),'/providers/Microsoft.Synapse/workspaces/',variables('WorkspaceName'),'/sqlPools/',variables('SQLPoolName'),'/Pause?api-version=2019-06-01-preview')",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "@json('{ }')",
									"type": "Expression"
								},
								"authentication": {
									"type": "MSI",
									"resource": "https://management.azure.com/"
								}
							}
						}
					]
				}
			},
			{
				"name": "GetSubscription",
				"description": "test",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SetSQLPoolName",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SetWorkspaceName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://management.azure.com/subscriptions?api-version=2020-01-01",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://management.azure.com/"
					}
				}
			},
			{
				"name": "SetParsedSubscription",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetSubscription",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "subscriptionID",
					"value": {
						"value": "@replace(activity('GetSubscription').output.value[0].id,'/subscriptions/','')\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SetResourceGroup",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetSubscription",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ResourceGroup",
					"value": {
						"value": "@pipeline().globalParameters.adf_resource_group_name",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SetCounter",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "QueryHistory",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "counter",
					"value": {
						"value": "9999",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SetCounter_copy1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "QueryHistory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "counter",
					"value": {
						"value": "@{activity('QueryHistory').output.firstRow.counter}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SetSQLPoolName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SQLPoolName",
					"value": {
						"value": "synlwcaelumdevdwsql",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SetWorkspaceName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "WorkspaceName",
					"value": {
						"value": "syn-lw-caelum-dev-dw",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"subscriptionID": {
				"type": "String"
			},
			"ResourceGroup": {
				"type": "String"
			},
			"counter": {
				"type": "String"
			},
			"SQLPoolName": {
				"type": "String"
			},
			"WorkspaceName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Caelum_Pipelines/utilities"
		},
		"annotations": []
	}
}