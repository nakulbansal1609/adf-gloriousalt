{
	"name": "rollback",
	"properties": {
		"activities": [
			{
				"name": "LoopParentChildTables",
				"description": "This will loop the deletion of transient to raw to trusted files for parent and child tables if existing  ",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetParentAndChild",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetParentAndChild').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "DeleteTransientFiles",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "caelum_data_lake_table_lvl",
									"type": "DatasetReference",
									"parameters": {
										"country": {
											"value": "@item().country_name",
											"type": "Expression"
										},
										"zone": "transient",
										"source": {
											"value": "@pipeline().parameters.source",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "dlalwcaelumdevdw01",
										"type": "LinkedServiceReference"
									},
									"path": "fs01-dlalwcaelumdevdw01/purge_logs/rollbacks"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "DeleteRawFiles",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "caelum_data_lake_table_lvl",
									"type": "DatasetReference",
									"parameters": {
										"country": {
											"value": "@item().country_name",
											"type": "Expression"
										},
										"zone": "raw",
										"source": {
											"value": "@pipeline().parameters.source",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "dlalwcaelumdevdw01",
										"type": "LinkedServiceReference"
									},
									"path": "fs01-dlalwcaelumdevdw01/purge_logs/rollbacks"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "DeleteTrustedFiles",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "caelum_data_lake_table_lvl",
									"type": "DatasetReference",
									"parameters": {
										"country": {
											"value": "@item().country_name",
											"type": "Expression"
										},
										"zone": "trusted",
										"source": {
											"value": "@pipeline().parameters.source",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "dlalwcaelumdevdw01",
										"type": "LinkedServiceReference"
									},
									"path": "fs01-dlalwcaelumdevdw01/purge_logs/rollbacks"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "RollBackTableIngestion",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DeleteTrustedFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "DeleteRawFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "DeleteTransientFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[RollBackTableIngestion]",
								"storedProcedureParameters": {
									"TableName": {
										"value": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"SourceID": {
										"value": {
											"value": "@item().source_id",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerID": {
										"value": {
											"value": "@item().trigger_id",
											"type": "Expression"
										},
										"type": "String"
									},
									"CountryID": {
										"value": {
											"value": "@item().country_id",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "adf_metastore",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "DropShield",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "RollBackTableIngestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[shield_db].[DropShield]",
								"storedProcedureParameters": {
									"TableName": {
										"value": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "synwlwcaelumdevdw_private",
								"type": "LinkedServiceReference",
								"parameters": {
									"database_name": "synlwcaelumdevdwsql"
								}
							}
						}
					]
				}
			},
			{
				"name": "GetParentAndChild",
				"description": "Lookup to check if the parent table has any childs",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderStoredProcedureName": "[dbo].[GetParentAndChild]",
						"storedProcedureParameters": {
							"table_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.table_name",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Metastore",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "''"
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"source": {
				"type": "string",
				"defaultValue": "CreditInfo"
			},
			"table_name": {
				"type": "string",
				"defaultValue": "suppliers"
			}
		},
		"folder": {
			"name": "Caelum_Pipelines/utilities"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-14T09:09:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}